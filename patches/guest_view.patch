diff --git a/content/browser/frame_host/render_widget_host_view_child_frame.cc b/content/browser/frame_host/render_widget_host_view_child_frame.cc
index 0c6bc7d..a2976af 100644
--- a/content/browser/frame_host/render_widget_host_view_child_frame.cc
+++ b/content/browser/frame_host/render_widget_host_view_child_frame.cc
@@ -32,7 +32,9 @@
 #include "content/common/view_messages.h"
 #include "content/public/browser/guest_mode.h"
 #include "content/public/browser/render_process_host.h"
+#include "content/public/browser/render_widget_host_view_frame_subscriber.h"
 #include "gpu/ipc/common/gpu_messages.h"
+#include "media/base/video_frame.h"
 #include "third_party/WebKit/public/platform/WebInputEvent.h"
 #include "ui/gfx/geometry/size_conversions.h"
 #include "ui/gfx/geometry/size_f.h"
@@ -750,4 +752,28 @@ cc::SurfaceId RenderWidgetHostViewChildFrame::SurfaceIdForTesting() const {
   return cc::SurfaceId(frame_sink_id_, local_frame_id_);
 };
 
+void RenderWidgetHostViewChildFrame::WillDrawSurface(
+    const cc::LocalFrameId& local_frame_id,
+    const gfx::Rect& damage_rect) {
+  if (local_frame_id != local_frame_id_ ||
+      damage_rect.IsEmpty() ||
+      !frame_subscriber_.get())
+    return;
+
+  base::TimeTicks present_time;
+  scoped_refptr<media::VideoFrame> frame;
+  RenderWidgetHostViewFrameSubscriber::DeliverFrameCallback callback;
+  frame_subscriber_->ShouldCaptureFrame(damage_rect, present_time, &frame,
+                                        &callback);
+}
+
+void RenderWidgetHostViewChildFrame::BeginFrameSubscription(
+    std::unique_ptr<RenderWidgetHostViewFrameSubscriber> subscriber) {
+  frame_subscriber_ = std::move(subscriber);
+}
+
+void RenderWidgetHostViewChildFrame::EndFrameSubscription() {
+  frame_subscriber_.reset();
+}
+
 }  // namespace content
diff --git a/content/browser/frame_host/render_widget_host_view_child_frame.h b/content/browser/frame_host/render_widget_host_view_child_frame.h
index 4c228e4..53adb91 100644
--- a/content/browser/frame_host/render_widget_host_view_child_frame.h
+++ b/content/browser/frame_host/render_widget_host_view_child_frame.h
@@ -196,6 +196,12 @@ class CONTENT_EXPORT RenderWidgetHostViewChildFrame
 
   void UpdateViewportIntersection(const gfx::Rect& viewport_intersection);
 
+  void WillDrawSurface(const cc::LocalFrameId& local_frame_id,
+                       const gfx::Rect& damage_rect) override;
+  void BeginFrameSubscription(
+      std::unique_ptr<RenderWidgetHostViewFrameSubscriber> subscriber) override;
+  void EndFrameSubscription() override;
+
  protected:
   friend class RenderWidgetHostView;
   friend class RenderWidgetHostViewChildFrameTest;
@@ -256,6 +262,8 @@ class CONTENT_EXPORT RenderWidgetHostViewChildFrame
   // The surface client ID of the parent RenderWidgetHostView.  0 if none.
   cc::FrameSinkId parent_frame_sink_id_;
 
+  std::unique_ptr<RenderWidgetHostViewFrameSubscriber> frame_subscriber_;
+
   base::WeakPtrFactory<RenderWidgetHostViewChildFrame> weak_factory_;
   DISALLOW_COPY_AND_ASSIGN(RenderWidgetHostViewChildFrame);
 };
