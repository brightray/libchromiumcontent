#!/usr/bin/env python

import argparse
import os
import subprocess
import sys

from lib.util import get_configuration, get_output_dir


SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
VENDOR_DIR = os.path.join(SOURCE_ROOT, 'vendor')
TARGETS = ['chromiumcontent_all']
FLAVORS = [
  { 'config': 'Release', 'component': 'static_library' },
  { 'config': 'Debug', 'component': 'shared_library' },
]

NINJA = os.path.join(VENDOR_DIR, 'depot_tools', 'ninja')
if sys.platform == 'win32':
  NINJA = '{0}.exe'.format(NINJA)


def main():
  args = parse_args()
  target_arch = args.target_arch

  os.chdir(SOURCE_ROOT)

  for flavor in FLAVORS:
    if args.component == 'all' or args.component == flavor['component']:
      out_dir = os.path.join(VENDOR_DIR, 'chromium', 'src',
                             get_output_dir(target_arch, flavor['component']))
      config = get_configuration(flavor['config'], target_arch)
      config_dir = os.path.relpath(os.path.join(out_dir, config))
      subprocess.check_call([NINJA, '-C', config_dir] + TARGETS)


def parse_args():
  parser = argparse.ArgumentParser(description='Build libchromiumcontent')
  parser.add_argument('-t', '--target_arch', default='x64', help='x64 or ia32')
  parser.add_argument('-c', '--component', default='all',
                      help='static_library or shared_library or all')
  return parser.parse_args()


if __name__ == '__main__':
    sys.exit(main())
