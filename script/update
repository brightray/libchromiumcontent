#!/usr/bin/env python

import errno
import os
import shutil
import subprocess


SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
VENDOR_DIR = os.path.join(SOURCE_ROOT, 'vendor')
DEPOT_TOOLS_DIR = os.path.join(VENDOR_DIR, 'depot_tools')
CHROMIUM_DIR = os.path.join(VENDOR_DIR, 'chromium')
SRC_DIR = os.path.join(CHROMIUM_DIR, 'src')
CHROMIUMCONTENT_DIR = os.path.join(SRC_DIR, 'chromiumcontent')


def main():
    gclient_sync()
    copy_gyp_files()
    run_gyp()


def gclient_sync():
    gclient = os.path.join(DEPOT_TOOLS_DIR, 'gclient.py')
    os.chdir(CHROMIUM_DIR)
    subprocess.check_call(['python', gclient, 'sync', '--revision',
                           'src@{0}'.format(chromium_revision())])


def chromium_revision():
    with open(os.path.join(SOURCE_ROOT, 'VERSION'), 'r') as f:
        [key, value] = f.readline().strip().split('=')
        assert key == 'CHROMIUM_REVISION'
        return value


def copy_gyp_files():
    try:
        os.makedirs(CHROMIUMCONTENT_DIR)
    except OSError as e:
        if e.errno != errno.EEXIST:
            raise
    shutil.copyfile(os.path.join(SOURCE_ROOT, 'chromiumcontent.gyp'),
                    os.path.join(CHROMIUMCONTENT_DIR, 'chromiumcontent.gyp'))


def run_gyp():
    os.environ['GYP_GENERATORS'] = 'ninja'
    os.chdir(SOURCE_ROOT)
    gyp = os.path.join(SRC_DIR, 'build', 'gyp_chromium')
    subprocess.check_call(['python', gyp, '-Ichromiumcontent.gypi',
                           '--depth', SRC_DIR,
                           os.path.join(CHROMIUMCONTENT_DIR,
                                        'chromiumcontent.gyp')])


if __name__ == '__main__':
    import sys
    sys.exit(main())
