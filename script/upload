#!/usr/bin/env python

import errno
import glob
import os
import subprocess
import sys


SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))

PLATFORM_KEY = {
    'darwin': 'osx',
    'win32': 'win',
}[sys.platform]


def main():
    try:
        ensure_s3put()
        upload()
    except AssertionError as e:
        return e.message


def ensure_s3put():
    output = ''
    try:
        output = subprocess.check_output(['s3put', '--help'])
    except OSError as e:
        if e.errno != errno.ENOENT:
            raise
    assert 'multipart' in output, 'Error: Please install boto and filechunkio'


def upload():
    os.chdir(SOURCE_ROOT)
    bucket, access_key, secret_key = s3_config()
    commit = subprocess.check_output(['git', 'rev-parse', 'HEAD']).strip()

    args = [
        's3put',
        '--bucket', bucket,
        '--access_key', access_key,
        '--secret_key', secret_key,
        '--prefix', SOURCE_ROOT,
        '--key_prefix', 'libchromiumcontent/{0}/{1}'.format(PLATFORM_KEY, commit),
        '--grant', 'public-read',
        '--multipart'
    ] + glob.glob('libchromiumcontent*.zip')

    subprocess.check_call(args)


def s3_config():
    config = (os.environ.get('LIBCHROMIUMCONTENT_S3_BUCKET', ''),
              os.environ.get('LIBCHROMIUMCONTENT_S3_ACCESS_KEY', ''),
              os.environ.get('LIBCHROMIUMCONTENT_S3_SECRET_KEY', ''))
    message = ('Error: Please set the $LIBCHROMIUMCONTENT_S3_BUCKET, '
               '$LIBCHROMIUMCONTENT_S3_ACCESS_KEY, and '
               '$LIBCHROMIUMCONTENT_S3_SECRET_KEY environment variables')
    assert all(len(c) for c in config), message
    return config


if __name__ == '__main__':
    sys.exit(main())
